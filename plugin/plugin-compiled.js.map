{"version":3,"sources":["plugin.js"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,MAAM,YAAY,EAAZ,CADI;AAEV,MAAM,SAAS,SAAT,MAAS;WAAU,YAAY,OAAO,GAAP,CAAW;aAAS,UAAU,MAAM,IAAN,CAAV,CAAsB,KAAtB;KAAT,CAAvB;GAAV,CAFL;AAGV,MAAM,cAAc,SAAd,WAAc;WAAQ,KAAK,MAAL,CAAY,UAAC,CAAD,EAAI,CAAJ;aAAU,IAAI,CAAJ;KAAV;GAApB,CAHV;;AAKV,IAAE,MAAF,CAAS,UAAT,EAAqB;AACnB,aAAS,mBAAY;AACnB,UAAM,MAAM,KAAK,OAAL,CADO;AAEnB,UAAM,MAAM,KAAK,OAAL,CAFO;AAGnB,UAAM,MAAM,OAAO,IAAI,MAAJ,CAAb,CAHa;AAInB,UAAI,IAAJ,CAAS,GAAT,EAJmB;KAAZ;AAMT,gBAAY,sBAAU;AACpB,UAAM,YAAY,KAAK,OAAL,CADE;AAEpB,aAAO,KAAK,OAAL,CAAa,MAAb,CAAoB,GAApB,CAAwB,UAAS,KAAT,EAAe;AAC5C,eAAO;AACL,cAAI,MAAM,EAAN;AACJ,iBAAO,UAAU,IAAV,OAAmB,MAAM,EAAN,CAAnB,CAA+B,GAA/B,EAAP;SAFF,CAD4C;OAAf,CAA/B,CAFoB;KAAV;GAPd,EALU;;AAuBV,IAAE,GAAF,CAAM,IAAN,CAAW,OAAX,GAAqB,UAAU,IAAV,EAAgB,QAAhB,EAA0B;AAC7C,cAAU,IAAV,IAAkB,QAAlB,CAD6C;GAA1B,CAvBX;;AA2BV,IAAE,GAAF,CAAM,IAAN,CAAW,OAAX,CAAmB,MAAnB,EAA2B,UAAU,KAAV,EAAiB;AAC1C,0CAAiC,MAAM,EAAN,yBAA0B,MAAM,EAAN,WAAa,MAAM,KAAN,aAAxE,CAD0C;GAAjB,CAA3B,CA3BU;;AA+BV,IAAE,GAAF,CAAM,IAAN,CAAW,OAAX,CAAmB,QAAnB,EAA6B,UAAU,KAAV,EAAiB;AAC5C,QAAM,WAAW,YAAY,MAAM,OAAN,CAAc,GAAd,CAAkB;kCAAyB,cAAQ;KAAjC,CAA9B,CAAX,CADsC;;AAG5C,WAAO,iBAAe,MAAM,EAAN,OAAf,GACH,QADG,GAEH,WAFG,CAHqC;GAAjB,CAA7B,CA/BU;CAAX,CAAD","file":"plugin-compiled.js","sourcesContent":["(function() {\r\n  const funciones = {};\r\n  const render = fields => concatename(fields.map(field => funciones[field.type](field)));\r\n  const concatename = mapo => mapo.reduce((a, b) => a + b);\r\n\r\n  $.widget(\"bla.form\", {\r\n    _create: function () {\r\n      const $el = this.element;\r\n      const opt = this.options;\r\n      const tpl = render(opt.fields);\r\n      $el.html(tpl);\r\n    },\r\n    dameLaData: function(){\r\n      const $domScope = this.element;\r\n      return this.options.fields.map(function(field){\r\n        return {\r\n          id: field.id,\r\n          value: $domScope.find(`#${field.id}`).val()\r\n        };\r\n      });\r\n    }\r\n  });\r\n\r\n  $.bla.form.addType = function (name, renderer) {\r\n    funciones[name] = renderer;\r\n  };\r\n\r\n  $.bla.form.addType(\"text\", function (field) {\r\n    return `<input type=\"text\" id=\"${field.id}\"> <label for=\"${field.id}\">${field.label}</label>`\r\n  });\r\n\r\n  $.bla.form.addType(\"select\", function (field) {\r\n    const opciones = concatename(field.options.map(opt => `<option value=\"${opt}\">${opt}</option>`));\r\n\r\n    return `<select id='${field.id}'>`\r\n      + opciones\r\n      + \"</select>\"\r\n  });\r\n})();\r\n"]}