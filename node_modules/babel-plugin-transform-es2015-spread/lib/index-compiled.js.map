{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nexports[\"default\"] = function (_ref) {\n  var t = _ref.types;\n\n  function getSpreadLiteral(spread, scope, state) {\n    if (state.opts.loose && !t.isIdentifier(spread.argument, { name: \"arguments\" })) {\n      return spread.argument;\n    } else {\n      return scope.toArray(spread.argument, true);\n    }\n  }\n\n  function hasSpread(nodes) {\n    for (var i = 0; i < nodes.length; i++) {\n      if (t.isSpreadElement(nodes[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function build(props, scope, state) {\n    var nodes = [];\n\n    var _props = [];\n\n    function push() {\n      if (!_props.length) return;\n      nodes.push(t.arrayExpression(_props));\n      _props = [];\n    }\n\n    for (var _i = 0; _i < props.length; _i++) {\n      var prop = props[_i];\n      if (t.isSpreadElement(prop)) {\n        push();\n        nodes.push(getSpreadLiteral(prop, scope, state));\n      } else {\n        _props.push(prop);\n      }\n    }\n\n    push();\n\n    return nodes;\n  }\n\n  return {\n    visitor: {\n      ArrayExpression: function ArrayExpression(path, state) {\n        var node = path.node;\n        var scope = path.scope;\n\n        var elements = node.elements;\n        if (!hasSpread(elements)) return;\n\n        var nodes = build(elements, scope, state);\n        var first = nodes.shift();\n\n        if (!t.isArrayExpression(first)) {\n          nodes.unshift(first);\n          first = t.arrayExpression([]);\n        }\n\n        path.replaceWith(t.callExpression(t.memberExpression(first, t.identifier(\"concat\")), nodes));\n      },\n\n      CallExpression: function CallExpression(path, state) {\n        var node = path.node;\n        var scope = path.scope;\n\n        var args = node.arguments;\n        if (!hasSpread(args)) return;\n\n        var calleePath = path.get(\"callee\");\n        if (calleePath.isSuper()) return;\n\n        var contextLiteral = t.identifier(\"undefined\");\n\n        node.arguments = [];\n\n        var nodes = undefined;\n        if (args.length === 1 && args[0].argument.name === \"arguments\") {\n          nodes = [args[0].argument];\n        } else {\n          nodes = build(args, scope, state);\n        }\n\n        var first = nodes.shift();\n        if (nodes.length) {\n          node.arguments.push(t.callExpression(t.memberExpression(first, t.identifier(\"concat\")), nodes));\n        } else {\n          node.arguments.push(first);\n        }\n\n        var callee = node.callee;\n\n        if (calleePath.isMemberExpression()) {\n          var temp = scope.maybeGenerateMemoised(callee.object);\n          if (temp) {\n            callee.object = t.assignmentExpression(\"=\", temp, callee.object);\n            contextLiteral = temp;\n          } else {\n            contextLiteral = callee.object;\n          }\n          t.appendToMemberExpression(callee, t.identifier(\"apply\"));\n        } else {\n          node.callee = t.memberExpression(node.callee, t.identifier(\"apply\"));\n        }\n\n        if (t.isSuper(contextLiteral)) {\n          contextLiteral = t.thisExpression();\n        }\n\n        node.arguments.unshift(contextLiteral);\n      },\n\n      NewExpression: function NewExpression(path, state) {\n        var node = path.node;\n        var scope = path.scope;\n\n        var args = node.arguments;\n        if (!hasSpread(args)) return;\n\n        var nodes = build(args, scope, state);\n\n        var context = t.arrayExpression([t.nullLiteral()]);\n\n        args = t.callExpression(t.memberExpression(context, t.identifier(\"concat\")), nodes);\n\n        path.replaceWith(t.newExpression(t.callExpression(t.memberExpression(t.memberExpression(t.memberExpression(t.identifier(\"Function\"), t.identifier(\"prototype\")), t.identifier(\"bind\")), t.identifier(\"apply\")), [node.callee, args]), []));\n      }\n    }\n  };\n};\n\nmodule.exports = exports[\"default\"];"]}