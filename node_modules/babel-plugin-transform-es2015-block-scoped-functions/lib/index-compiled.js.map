{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,UAAR,GAAqB,IAArB;;AAEA,QAAQ,SAAR,IAAqB,UAAU,IAAV,EAAgB;AACnC,MAAI,IAAI,KAAK,KAAL,CAD2B;;AAGnC,WAAS,aAAT,CAAuB,GAAvB,EAA4B,IAA5B,EAAkC;AAChC,QAAI,QAAQ,KAAK,GAAL,CAAS,GAAT,CAAR,CAD4B;;AAGhC,SAAK,IAAI,KAAK,CAAL,EAAQ,KAAK,MAAM,MAAN,EAAc,IAApC,EAA0C;AACxC,UAAI,QAAQ,MAAM,EAAN,CAAR,CADoC;AAExC,UAAI,OAAO,MAAM,IAAN,CAF6B;AAGxC,UAAI,CAAC,MAAM,qBAAN,EAAD,EAAgC,SAApC;;AAEA,UAAI,SAAS,EAAE,mBAAF,CAAsB,KAAtB,EAA6B,CAAC,EAAE,kBAAF,CAAqB,KAAK,EAAL,EAAS,EAAE,YAAF,CAAe,IAAf,CAA9B,CAAD,CAA7B,CAAT;;;AALoC,YAQxC,CAAO,WAAP,GAAqB,CAArB;;;AARwC,UAWxC,CAAK,EAAL,GAAU,IAAV,CAXwC;;AAaxC,YAAM,WAAN,CAAkB,MAAlB,EAbwC;KAA1C;GAHF;;AAoBA,SAAO;AACL,aAAS;AACP,sBAAgB,SAAS,cAAT,CAAwB,IAAxB,EAA8B;AAC5C,YAAI,OAAO,KAAK,IAAL,CADiC;AAE5C,YAAI,SAAS,KAAK,MAAL,CAF+B;;AAI5C,YAAI,EAAE,UAAF,CAAa,MAAb,EAAqB,EAAE,MAAM,IAAN,EAAvB,KAAwC,EAAE,mBAAF,CAAsB,MAAtB,CAAxC,EAAuE;AACzE,iBADyE;SAA3E;;AAIA,sBAAc,MAAd,EAAsB,IAAtB,EAR4C;OAA9B;;AAWhB,kBAAY,SAAS,UAAT,CAAoB,IAApB,EAA0B;AACpC,sBAAc,YAAd,EAA4B,IAA5B,EADoC;OAA1B;KAZd;GADF,CAvBmC;CAAhB;;AA2CrB,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB","file":"index-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nexports[\"default\"] = function (_ref) {\n  var t = _ref.types;\n\n  function statementList(key, path) {\n    var paths = path.get(key);\n\n    for (var _i = 0; _i < paths.length; _i++) {\n      var _path = paths[_i];\n      var func = _path.node;\n      if (!_path.isFunctionDeclaration()) continue;\n\n      var declar = t.variableDeclaration(\"let\", [t.variableDeclarator(func.id, t.toExpression(func))]);\n\n      // hoist it up above everything else\n      declar._blockHoist = 2;\n\n      // todo: name this\n      func.id = null;\n\n      _path.replaceWith(declar);\n    }\n  }\n\n  return {\n    visitor: {\n      BlockStatement: function BlockStatement(path) {\n        var node = path.node;\n        var parent = path.parent;\n\n        if (t.isFunction(parent, { body: node }) || t.isExportDeclaration(parent)) {\n          return;\n        }\n\n        statementList(\"body\", path);\n      },\n\n      SwitchCase: function SwitchCase(path) {\n        statementList(\"consequent\", path);\n      }\n    }\n  };\n};\n\nmodule.exports = exports[\"default\"];"]}