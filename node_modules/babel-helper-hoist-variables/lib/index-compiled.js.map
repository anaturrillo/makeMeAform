{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,0BAA0B,QAAQ,gDAAR,EAA0D,SAA1D,CAA1B;;AAEJ,QAAQ,UAAR,GAAqB,IAArB;;AAEA,IAAI,cAAc,QAAQ,aAAR,CAAd;;AAEJ,IAAI,IAAI,wBAAwB,WAAxB,CAAJ;;AAEJ,IAAI,UAAU;AACZ,SAAO,SAAS,KAAT,CAAe,IAAf,EAAqB,KAArB,EAA4B;AACjC,QAAI,MAAM,IAAN,KAAe,KAAf,EAAsB,KAAK,IAAL,GAA1B;GADK;;AAIP,YAAU,SAAS,QAAT,CAAkB,IAAlB,EAAwB;AAChC,SAAK,IAAL,GADgC;GAAxB;;AAIV,uBAAqB,SAAS,mBAAT,CAA6B,IAA7B,EAAmC,KAAnC,EAA0C;AAC7D,QAAI,MAAM,IAAN,IAAc,KAAK,IAAL,CAAU,IAAV,KAAmB,MAAM,IAAN,EAAY,OAAjD;;AAEA,QAAI,QAAQ,EAAR,CAHyD;;AAK7D,QAAI,eAAe,KAAK,GAAL,CAAS,cAAT,CAAf,CALyD;AAM7D,QAAI,UAAU,SAAV,CANyD;;AAQ7D,SAAK,IAAI,KAAK,CAAL,EAAQ,KAAK,aAAa,MAAb,EAAqB,IAA3C,EAAiD;AAC/C,UAAI,SAAS,aAAa,EAAb,CAAT,CAD2C;AAE/C,gBAAU,OAAO,IAAP,CAAY,EAAZ,CAFqC;;AAI/C,UAAI,OAAO,IAAP,CAAY,IAAZ,EAAkB;AACpB,cAAM,IAAN,CAAW,EAAE,mBAAF,CAAsB,EAAE,oBAAF,CAAuB,GAAvB,EAA4B,OAAO,IAAP,CAAY,EAAZ,EAAgB,OAAO,IAAP,CAAY,IAAZ,CAAlE,CAAX,EADoB;OAAtB;;AAIA,WAAK,IAAI,KAAJ,IAAa,OAAO,qBAAP,EAAlB,EAAkD;AAChD,cAAM,IAAN,CAAW,EAAE,UAAF,CAAa,KAAb,CAAX,EAAgC,KAAhC,EADgD;OAAlD;KARF;;;AAR6D,QAsBzD,KAAK,UAAL,CAAgB,KAAhB,CAAsB,EAAE,MAAM,KAAK,IAAL,EAA9B,CAAJ,EAAgD;AAC9C,WAAK,WAAL,CAAiB,OAAjB,EAD8C;KAAhD,MAEO;AACL,WAAK,mBAAL,CAAyB,KAAzB,EADK;KAFP;GAtBmB;CATnB;;AAuCJ,QAAQ,SAAR,IAAqB,UAAU,IAAV,EAAgB,IAAhB,EAAsB;AACzC,MAAI,OAAO,UAAU,MAAV,IAAoB,CAApB,IAAyB,UAAU,CAAV,MAAiB,SAAjB,GAA6B,KAAtD,GAA8D,UAAU,CAAV,CAA9D,CAD8B;;AAGzC,OAAK,QAAL,CAAc,OAAd,EAAuB,EAAE,MAAM,IAAN,EAAY,MAAM,IAAN,EAArC,EAHyC;CAAtB;;AAMrB,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB","file":"index-compiled.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"babel-runtime/helpers/interop-require-wildcard\")[\"default\"];\n\nexports.__esModule = true;\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar visitor = {\n  Scope: function Scope(path, state) {\n    if (state.kind === \"let\") path.skip();\n  },\n\n  Function: function Function(path) {\n    path.skip();\n  },\n\n  VariableDeclaration: function VariableDeclaration(path, state) {\n    if (state.kind && path.node.kind !== state.kind) return;\n\n    var nodes = [];\n\n    var declarations = path.get(\"declarations\");\n    var firstId = undefined;\n\n    for (var _i = 0; _i < declarations.length; _i++) {\n      var declar = declarations[_i];\n      firstId = declar.node.id;\n\n      if (declar.node.init) {\n        nodes.push(t.expressionStatement(t.assignmentExpression(\"=\", declar.node.id, declar.node.init)));\n      }\n\n      for (var _name in declar.getBindingIdentifiers()) {\n        state.emit(t.identifier(_name), _name);\n      }\n    }\n\n    // for (var i in test)\n    if (path.parentPath.isFor({ left: path.node })) {\n      path.replaceWith(firstId);\n    } else {\n      path.replaceWithMultiple(nodes);\n    }\n  }\n};\n\nexports[\"default\"] = function (path, emit) {\n  var kind = arguments.length <= 2 || arguments[2] === undefined ? \"var\" : arguments[2];\n\n  path.traverse(visitor, { kind: kind, emit: emit });\n};\n\nmodule.exports = exports[\"default\"];"]}